sequenceDiagram
    title Pod Startup Networking Sequence CNI
    autonumber


    participant APIServer as API Server
    participant Kubelet
    participant ContainerRuntime as Container Runtime (CRI)
    participant CNIPlugin as CNI Plugin
    participant NetworkPlugin as Network Plugin

    Kubelet->>APIServer: Watch for Pods assigned to its node
    APIServer-->>+Kubelet: Notification: New Pod scheduled
    note over Kubelet: Admission control<br>before starting the Pod

    Kubelet->>+ContainerRuntime: RunPodSandbox
    note over ContainerRuntime: Creates a new network namespace<br>for the Pod.

    loop Chained Plugins (CNI)

        ContainerRuntime->>+CNIPlugin: Execute CNI ADD command
        note right of ContainerRuntime: Passes NetNS path, ContainerID, and CNI_ARGS

        alt Thin Plugin (self contained)
            CNIPlugin->>CNIPlugin: Configure Pod Networking<br/>(e.g., create veth, assign IP via IPAM, set routes)
        else Thick Plugin (shim CNI Plugin)
            CNIPlugin->>+NetworkPlugin: forward CNI ADD command
            NetworkPlugin->>+APIServer: GET /api/v1/namespaces/{ns}/pods/{name}
            note right of NetworkPlugin: Fetches Pod details and/or Custom Resources<br/>to make networking decisions.
            APIServer-->>-NetworkPlugin: Pod Spec and or CustomResource (JSON)
            NetworkPlugin->>NetworkPlugin: Configure Pod Networking<br/>(e.g., create veth, assign IP via IPAM, set routes, network policies, mesh)
            NetworkPlugin-->>-CNIPlugin: 
        end
    end
    
    CNIPlugin-->>-ContainerRuntime: Return CNI Result (JSON)
    note right of ContainerRuntime: { "ips": [{"address": "10.244.1.5/24", ...}], "interfaces": [...] }

    ContainerRuntime-->>-Kubelet: RunPodSandboxResponse(SandboxID)

    Kubelet->>+ContainerRuntime: PodSandboxStatus()
    ContainerRuntime-->>-Kubelet: PodSandboxStatusResponse
    note left of ContainerRuntime: PodSandboxStatusResponse.Network: Ip, AdditionalIPs


    loop for every container
        Kubelet->>+ContainerRuntime: CreateContainer()
        note right of ContainerRuntime: The application container is started<br/>within the configured network namespace.
        ContainerRuntime-->>-Kubelet: Containers started successfully
    end

    Kubelet->>-APIServer: PATCH /api/v1/pods/{name}/status
    note over Kubelet, APIServer: Update Pod status with the assigned IP address<br/>and set phase to 'Running'.